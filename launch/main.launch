<?xml version="1.0"?>

<launch>
   
  <env name="GAZEBO_MODEL_PATH" value="$(find bebop_gazebo)/models:$GAZEBO_MODEL_PATH" />
	

  <!-- Start Gazebo with wg world running in (max) realtime -->
  <include file="$(find hector_gazebo_worlds)/launch/start.launch">
   <arg name="world" value="worlds/zephyr_demo.world"/>
  <!-- <arg name="world" value="$(find uav_landing)/worlds/hecto.world"/> -->
  </include>


  <node name="spawn_helipad" pkg="gazebo_ros" type="spawn_model"
      args="-file $(find bebop_gazebo)/models/marker3/model.sdf
         -model marker3 -sdf
         -x -10.0
         -y 10.0
         -z 0.3"
      respawn="false" output="screen"/>
  
  <node pkg="uav_landing" type="moving_helipad.py" name="moving_helipad" output="screen" >
      <param name="x_vel" type="double" value="0.0" />
      <param name="y_vel" type="double" value="1.0" />
      <param name="seconds_before_moving" type="double" value="2" />
  </node>
  
  <include file = "$(find uav_landing)/launch/hector_helipad_individual.launch">
  </include>

  <!--Launch file for visual odometry -->
  <!--
  <include file = "$(find uav_landing)/launch/visual_odometry.launch">
  </include>-->
  -->

  <!-- Node for state estimation of the quadrotor -->
  <!--<node pkg="hector_pose_estimation" type="pose_estimation" name="hector_pose_estimation" />-->

  <!-- Spawn simulated quadrotor uav -->
  <include file="$(find hector_quadrotor_gazebo)/launch/spawn_quadrotor.launch" >
    <arg name="model" value="$(find hector_quadrotor_description)/urdf/quadrotor_downward_cam.gazebo.xacro"/>
    <arg name="controllers" value=" 
        controller/attitude
        controller/velocity
        controller/position
        "/>

  </include>
  
  <!-- launching with lidar -->
  <!--
  <include file="$(find hector_quadrotor_gazebo)/launch/spawn_quadrotor.launch" >
    <arg name="model" value="$(find hector_quadrotor_description)/urdf/quadrotor_hokuyo_utm30lx.gazebo.xacro"/>
    <arg name="controllers" value="
        controller/attitude
        controller/velocity
        controller/position
        "/>
  </include>
  -->

  <!-- Node for Exploration -->
  <!--
  <node pkg="uav_landing" type="exploration_node.py" name="exploration_node" output="screen" />
  -->


  <!-- estimate_pad_velocity -->
  <node pkg="uav_landing" type="estimate_pad_velocity.py" name="estimate_pad_velocity" output="screen" respawn = "true"/>

 <!-- hector slam -->
 <!--
 <include file="$(find hector_slam_launch)/launch/tutorial.launch" />
 -->  

  <!-- Generate scanned map in real time with ROSBAG -->
  
  <!-- /home/pooja/Desktop/catkin_ws/src/uav_landing/Team_Hector_MappingBox_RoboCup_2011_Rescue_Arena.bag -->

  <!-- Start rviz visualization with preset config -->
  <node pkg="rviz" type="rviz" name="rviz" args="-d $(find hector_quadrotor_demo)/rviz_cfg/outdoor_flight.rviz"/>
  <!-- <node pkg="rviz" type="rviz" name="rviz" args="-d $(find hector_slam_launch)/rviz_cfg/mapping_demo.rviz"/> -->
  
</launch>
